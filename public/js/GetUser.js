document.addEventListener("DOMContentLoaded", () => {
    // –ó–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    fetch("http://localhost:8080/GetUsers")  // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
        .then(response => response.json())  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç –≤ JSON
        .then(data => {
            const users = data.users;  // –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –æ—Ç–≤–µ—Ç–∞

            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–ª–æ —Ç–∞–±–ª–∏—Ü—ã
            const tableBody = document.getElementById("userTableBody");
            tableBody.innerHTML = "";  // –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–µ—Ä–µ–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º

            // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ —Å–æ–∑–¥–∞—ë–º —Å—Ç—Ä–æ–∫—É —Ç–∞–±–ª–∏—Ü—ã
            users.forEach(user => {
                const createdAt = new Date(user.CreateUser);  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –æ–±—ä–µ–∫—Ç Date
                const currentDate = new Date();

                const endDate = new Date(createdAt);
                endDate.setDate(endDate.getDate() + 30);  // –ü—Ä–∏–±–∞–≤–ª—è–µ–º 30 –¥–Ω–µ–π

                const timeDiff = endDate - currentDate;  // –†–∞–∑–Ω–∏—Ü–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–∏
                const daysRemaining = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));  // –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ –¥–Ω–∏

                // –°–æ–∑–¥–∞—ë–º —Å—Ç—Ä–æ–∫—É —Ç–∞–±–ª–∏—Ü—ã
                const row = document.createElement("tr");
                row.innerHTML = `
                    <td>${user.Login}</td>
                    <td>${user.Email}</td>
                    <td>${user.Password}</td>
                    <td><button class="statusBlock" data-id="${user.Id}">${user.Status === 1 ? "–∞–∫—Ç–∏–≤–µ–Ω ‚úÖ" : "–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω üö´"}</button></td>
                    <td>${user.Role}</td>
                    <td>${daysRemaining}</td>
                    <td><button class="deleteUser" data-id="${user.Id}">–£–¥–∞–ª–∏—Ç—å</button></td>
                `;

                // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Ç–∞–±–ª–∏—Ü—É
                tableBody.appendChild(row);
            });

            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            document.querySelectorAll(".deleteUser").forEach(button => {
                button.addEventListener("click", (event) => {
                    const userId = event.target.getAttribute("data-id");
                    deleteUser(userId);
                });
            });



            document.querySelectorAll(".statusBlock").forEach(button => {
                button.addEventListener("click", (event) => {
                    const userId = event.target.getAttribute("data-id");
                    StatusUser(userId);
                });
            });

            document.querySelectorAll()
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", error));
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function deleteUser(Id) {
    fetch(`http://localhost:8080/DeleteUser/${Id}`, {
        method: "DELETE",
    })
        .then(response => {
            if (response.ok) {
                alert("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω");
                location.reload();  // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É
            } else {
                alert("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è");
            }
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:", error));
}

function StatusUser(Id) {
    fetch(`http://localhost:8080/StatusPut/${Id}`, {
        method: "PUT",
    })
        .then(response => {
            if (response.ok) {
                alert("–°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–æ—è –∏–∑–º–µ–Ω—ë–Ω");
                location.reload();  // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É
            } else {
                alert("–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞");
            }
        })
        .catch(error => console.error("–û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:", error));
}

function deleteCookie() {
    console.log("—Ä–∞–±–æ—Ç–∞–µ—Ç –∫—É–∫–∏")
    document.cookie = "token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
    document.cookie = "token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=localhost";
}

document.getElementById("LeaveButton").addEventListener("click", () => {
    console.log("—Ä–∞–±–æ—Ç–∞–µ—Ç –∫–Ω–æ–ø–∫–∞")
    deleteCookie()
})
